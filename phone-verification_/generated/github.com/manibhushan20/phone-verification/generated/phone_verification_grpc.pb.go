// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.1
// source: proto/phone_verification.proto

package generated

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	PhoneVerificationService_VerifyPhoneNumber_FullMethodName = "/phoneverification.PhoneVerificationService/VerifyPhoneNumber"
)

// PhoneVerificationServiceClient is the client API for PhoneVerificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// The phone verification service definition
type PhoneVerificationServiceClient interface {
	VerifyPhoneNumber(ctx context.Context, in *VerifyPhoneNumberRequest, opts ...grpc.CallOption) (*VerifyPhoneNumberResponse, error)
}

type phoneVerificationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneVerificationServiceClient(cc grpc.ClientConnInterface) PhoneVerificationServiceClient {
	return &phoneVerificationServiceClient{cc}
}

func (c *phoneVerificationServiceClient) VerifyPhoneNumber(ctx context.Context, in *VerifyPhoneNumberRequest, opts ...grpc.CallOption) (*VerifyPhoneNumberResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(VerifyPhoneNumberResponse)
	err := c.cc.Invoke(ctx, PhoneVerificationService_VerifyPhoneNumber_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneVerificationServiceServer is the server API for PhoneVerificationService service.
// All implementations must embed UnimplementedPhoneVerificationServiceServer
// for forward compatibility
//
// The phone verification service definition
type PhoneVerificationServiceServer interface {
	VerifyPhoneNumber(context.Context, *VerifyPhoneNumberRequest) (*VerifyPhoneNumberResponse, error)
	mustEmbedUnimplementedPhoneVerificationServiceServer()
}

// UnimplementedPhoneVerificationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPhoneVerificationServiceServer struct {
}

func (UnimplementedPhoneVerificationServiceServer) VerifyPhoneNumber(context.Context, *VerifyPhoneNumberRequest) (*VerifyPhoneNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyPhoneNumber not implemented")
}
func (UnimplementedPhoneVerificationServiceServer) mustEmbedUnimplementedPhoneVerificationServiceServer() {
}

// UnsafePhoneVerificationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneVerificationServiceServer will
// result in compilation errors.
type UnsafePhoneVerificationServiceServer interface {
	mustEmbedUnimplementedPhoneVerificationServiceServer()
}

func RegisterPhoneVerificationServiceServer(s grpc.ServiceRegistrar, srv PhoneVerificationServiceServer) {
	s.RegisterService(&PhoneVerificationService_ServiceDesc, srv)
}

func _PhoneVerificationService_VerifyPhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyPhoneNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneVerificationServiceServer).VerifyPhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PhoneVerificationService_VerifyPhoneNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneVerificationServiceServer).VerifyPhoneNumber(ctx, req.(*VerifyPhoneNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneVerificationService_ServiceDesc is the grpc.ServiceDesc for PhoneVerificationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneVerificationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "phoneverification.PhoneVerificationService",
	HandlerType: (*PhoneVerificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyPhoneNumber",
			Handler:    _PhoneVerificationService_VerifyPhoneNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/phone_verification.proto",
}
