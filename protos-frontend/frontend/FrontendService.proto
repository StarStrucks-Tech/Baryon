syntax = "proto3";

// Import ResponseType enum from enums/ResponseType.proto
import "protos-frontend/enums/ResponseType.proto";

// Import PermissionTypes enum from enums/PermissionTypes.proto
import "protos-frontend/enums/PermissionTypes.proto";

// Import Button message from ui/Button.proto
import "protos-frontend/ui/Button.proto";

// Import Image message from ui/Image.proto
import "protos-frontend/ui/Image.proto";

// Import Text message from ui/Text.proto
import "protos-frontend/ui/Text.proto";

// Import LocationConsent message from ui/LocationConsent.proto
import "protos-frontend/ui/LocationConsent.proto";

// Import NotificationsConsent message from ui/NotificationsConsent.proto
import "protos-frontend/ui/NotificationsConsent.proto";

// Import Modal message from ui/Modal.proto
import "protos-frontend/ui/Modal.proto";

// Import CheckBox message from ui/CheckBox.proto
import "protos-frontend/ui/CheckBox.proto";


// Define the package name
package Frontend;

option go_package = "Rinnegan/proto-generated/protos-frontend/frontend";

/**
 * Service definition for OtherConsentsService
 * This service provides the Other Consents feature.
 */
service OtherConsentsService {
  /**
   * RPC method to get the Other Consents screen
   * Returns the Other Consents screen for a given user.
   */
  rpc GetOtherConsentsScreen(GetOtherConsentsScreenRequest) returns (GetOtherConsentsScreenResponse);
}

/**
 * Request message for GetOtherConsentsScreen RPC
 * Represents the request to get the Other Consents screen.
 */
message GetOtherConsentsScreenRequest {
  /**
   * User ID of the user requesting the screen
   */
  string user_id = 1;

  /**
   * Whether the user has granted permission
   */
  bool is_permission_granted = 2;

  /**
   * List of permissions being requested
   */
  repeated enums.PermissionType requested_permissions = 3;

  /**
   * Device ID of the device making the request
   */
  string device_id = 4;

  /**
   * App version of the app making the request
   */
  string app_version = 5;
}

/**
 * Response message for GetOtherConsentsScreen RPC
 * Represents the response to the GetOtherConsentsScreen RPC method.
 */
message GetOtherConsentsScreenResponse {

  /**
   * Image to display on the permission screen
   */
  ui.Image permission_image = 1;

  /**
   * Header text to display on the permission screen
   */
  ui.Text permission_header = 2;
  
  /**
   * Paragraph text to display on the permission screen
   */
  ui.Text permission_paragraph = 3;

  /**
   * Notifications consent component
   */
  ui.NotificationsConsent notifications_consent = 4;

  /**
   * Location consent component
   */
  ui.LocationConsent location_consent = 5;

  /**
   * Next button component
   */
  ui.Button next_button = 6;

  /**
   * Agreement checkbox component
   */
  ui.CheckBox agreement_checkbox = 7;

  /**
   * Alert modal component
   */
  ui.Modal alert_modal = 8;

  /**
   * Error type (if any)
   */
   enums.ErrorType error = 9;
}